let fab <- fn(): boolean {
	...
};

let console__log <- fn(a: A): T {
	...
};

let console__error <- fn(a: A): T {
	...
};

let console__warn <- fn(a: A): T {
	...
};

let parseInt <- fn(s: chars, r: int): int {
	...
};

let parseFloat <- fn(s: chars): num {
	...
};

let isNaN <- fn(a: T): bool {
	...
};

let setTimeout <- fn(c: C, d: int): T {
	...
};

let setInterval <- fn(c: C, d: int): T {
	...
};

let clearTimeout <- fn(t: T): U {
	...
};

let clearInterval <- fn(t: T): U {
	...
};

let math__abs <- fn(a: num): num {
	...
};

let math__acos <- fn(a: num): num {
	...
};

let math__acosh <- fn(a: num): num {
	...
};

let math__asin <- fn(a: num): num {
	...
};

let math__asinh <- fn(a: num): num {
	...
};

let math__atan <- fn(a: num): num {
	...
};

let math__atan2 <- fn(a: num): num {
	...
};

let math__atanh <- fn(a: num): num {
	...
};

let math__cbrt <- fn(a: num): num {
	...
};

let math__ceil <- fn(a: num): num {
	...
};

let math__cos <- fn(a: num): num {
	...
};

let math__cosh <- fn(a: num): num {
	...
};

let math__exp <- fn(a: num): num {
	...
};

let math__expm1 <- fn(a: num): num {
	...
};

let math__floor <- fn(a: num): num {
	...
};

let math__f16round <- fn(a: num): num {
	...
};

let math__fround <- fn(a: num): num {
	...
};

let math__hypot <- fn(a: num): num {
	...
};

let math__log <- fn(a: num): num {
	...
};

let math__log10 <- fn(a: num): num {
	...
};

let math_log2 <- fn(a: num): num {
	...
};

let math__min <- fn(a: [#N, T]): T  {
	...
};

let math__max <- fn(a: [#N, T]): T  {
	...
};

let math__pow <- fn(a: num, b: num): num  {
	...
};

let map <- fn(a: [#N, T], f: (T) -> U): [#N, U] {
	...
};

let incr <- fn(a: int): int {
	...
};

let seq <- fn(a: #I, b: #J, c: #K): [#J-#I/#K+1, int] {
	...
};

let rev <- fn(a: [#N, T]): [#N, T] {
	...
};

let mean <- fn(a: [#N, T]): T  {
	...
};

let sd <- fn(a: [#N, T]): T  {
	...
};


let add <- fn(a: int, b: int): int {
	...
};

let add <- fn(a: num, b: num): num {
	...
};

let minus <- fn(a: int, b: int): int {
	...
};

let minus <- fn(a: num, b: num): num {
	...
};

let mul <- fn(a: int, b: int): int {
	...
};

let mul <- fn(a: num, b: num): num {
	...
};

let div <- fn(a: int, b: int): int {
	...
};

let div <- fn(a: num, b: num): num {
	...
};
