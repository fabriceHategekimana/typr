let seq <- fn(a: #I, b: #J, c: #K): [#J-#I/#K, int] {
	...
};

let append <- fn(a: [#M, T], e: T): [#M+1, T] {
	...
};

let add <- fn(a: int, b: int): int {
	...
};

let add <- fn(a: num, b: num): num {
	...
};

let mul <- fn(a: int, b: int): int {
	...
};

let mul <- fn(a: num, b: num): num {
	...
};

let map <- fn(a: [#N, T], f: (T) -> U): [#N, U] {
	...
};

let dot <- fn(m: [#M, [#P, int]], n: [#P, [#N, int]]): [#M, [#N, int]] {
	...
};

let t <- fn(m: [#M, [#N, T]]): [#N, [#M, T]] {
	...
};
